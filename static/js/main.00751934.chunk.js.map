{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","services/fetchApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","fetchAPI","query","page","a","url","fetch","response","json","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","form","e","preventDefault","trim","toast","warning","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","ImageGalleryItem","src","alt","onClick","largeImage","image","ImageGallery","result","gallery","map","item","webformatURL","tags","largeImageURL","id","Button","modalRoot","document","getElementById","Modal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","Status","App","setPage","setResult","showModal","setShowModal","status","setStatus","setLargeImage","isFirstRender","useRef","current","errors","noImages","noMore","onFetchImages","hits","length","Error","prevState","scrollBy","top","behavior","message","info","error","toggleModal","newLargeImage","newSearchQuery","color","width","style","textAlign","position","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00751934.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\",\"item\":\"ImageGallery_item__35Kd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","const API_KEY = '23600792-c35e54b22aba5a82a8a51cd77';\nconst BASE_URL = 'https://pixabay.com/api';\n\nconst fetchAPI = async (query, page) => {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`;\n  const response = await fetch(url);\n\n  return await response.json();\n};\n\nexport default fetchAPI;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport s from './Searchbar.module.css';\nimport { toast } from 'react-toastify';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.warning('Enter your request');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <ImSearch />\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleQueryChange}\n          value={searchQuery}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ src, alt, onClick, largeImage }) => {\n  return <img className={s.image} src={src} alt={alt} onClick={() => onClick(largeImage)} />;\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ result, onClick }) => {\n  return (\n    <ul className={s.gallery}>\n      {result.map(image => (\n        <li key={image.id} className={s.item}>\n          <ImageGalleryItem\n            src={image.webformatURL}\n            alt={image.tags}\n            largeImage={image.largeImageURL}\n            onClick={onClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  result: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ largeImage, onClick }) => {\n  const handleBackdropClick = e => e.currentTarget === e.target && onClick();\n\n  useEffect(() => {\n    const handleKeyDown = e => e.code === 'Escape' && onClick();\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClick]);\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackdropClick}>\n      <div className={s.modal}>\n        <img src={largeImage} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  largeImage: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport fetchAPI from './services/fetchApi';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Status = {\n  IDLE: 'idle', //both are false\n  RESOLVED: 'resolved', //loader is false, button is true\n  PENDING: 'pending', //loader is true, button is false\n};\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [result, setResult] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [largeImage, setLargeImage] = useState(null);\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    const errors = {\n      noImages: `No images found for \"${searchQuery}\". Try again.`,\n      noMore: `No more images for \"${searchQuery}\".`,\n    };\n\n    const onFetchImages = async page => {\n      try {\n        const { hits } = await fetchAPI(searchQuery, page);\n\n        if (hits.length === 0) {\n          throw new Error(errors.noImages);\n        }\n\n        if (hits.length < 12) {\n          setResult(prevState => [...prevState, ...hits]);\n          throw new Error(errors.noMore);\n        }\n        setStatus(Status.RESOLVED);\n        setResult(prevState => [...prevState, ...hits]);\n        window.scrollBy({ top: 1000, behavior: 'smooth' });\n      } catch (error) {\n        if (error.message === errors.noMore) {\n          toast.info(error.message);\n        } else {\n          toast.error(error.message);\n        }\n        setStatus(Status.IDLE);\n      }\n    };\n\n    onFetchImages(page);\n  }, [page, searchQuery]);\n\n  const onLoadMoreClick = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handleFormSubmit = newSearchQuery => {\n    if (newSearchQuery !== searchQuery) {\n      setResult([]);\n      setPage(1);\n      setSearchQuery(newSearchQuery);\n    }\n  };\n\n  const toggleModal = newLargeImage => {\n    setLargeImage(newLargeImage);\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery result={result} onClick={toggleModal} />\n      {status === Status.RESOLVED && <Button onClick={onLoadMoreClick} />}\n      {status === Status.PENDING && (\n        <Loader type=\"ThreeDots\" color=\"#995471\" width={100} style={{ textAlign: 'center' }} />\n      )}\n      {showModal && <Modal largeImage={largeImage} onClick={toggleModal} />}\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"form\":\"Searchbar_form__XuKjc\",\"button\":\"Searchbar_button__MhnaU\",\"label\":\"Searchbar_label__1BV3w\",\"input\":\"Searchbar_input__2C4aO\"};"],"sourceRoot":""}